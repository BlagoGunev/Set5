package week26.Capitals;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.*;

public class MainWindow extends JFrame {
    private JComboBox<String> countriesComboBox;
    private JTextField answerTextField;
    private JLabel currentScoreLabel;
    private JLabel highScoreLabel;
    private JPanel mainPanel;

    private final Map<String, String> countryCapital;

    private int score, highScore;

    public MainWindow(String title) {
        this.setTitle(title);
        this.setContentPane(mainPanel);
        this.setVisible(true);
        this.pack();

        this.score = 0;
        this.highScore = 0;

        countryCapital = new HashMap<String, String>();

        try {
            Scanner scanner = new Scanner(new File("src/week26/Capitals/CountriesCapitals.txt"));
            while (scanner.hasNextLine()) {
                String country = scanner.nextLine().strip();
                String capital = scanner.nextLine().strip();
                countriesComboBox.addItem(country);
                countryCapital.put(country, capital);
            }
        } catch (Exception e) {
            infoBox("The list of countries and capitals was not found.", "Error");
        }

        answerTextField.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String selectedCountry = (String) countriesComboBox.getSelectedItem();
                if (countryCapital.get(selectedCountry).toLowerCase(Locale.ROOT).equals(answerTextField.getText().toLowerCase(Locale.ROOT))) {
                    score++;
                    currentScoreLabel.setText("Current Score: " + score);
                    countriesComboBox.removeItem(selectedCountry);
                } else {
                    infoBox("You Lose!", "Game End");
                    restartGame();
                }
                answerTextField.setText("");
            }
        });
    }

    public static void infoBox(String infoMessage, String titleBar) {
        JOptionPane.showMessageDialog(null, infoMessage, titleBar, JOptionPane.INFORMATION_MESSAGE);
    }

    private void restartGame() {
        this.highScore = Math.max(this.highScore, this.score);
        this.highScoreLabel.setText("High Score: " + highScore);
        this.score = 0;
        this.currentScoreLabel.setText("Current Score: 0");

        countriesComboBox.removeAllItems();
        ArrayList<String> arrayList = new ArrayList<>(countryCapital.keySet());
        arrayList.sort(Comparator.naturalOrder());
        for (String country : arrayList) {
            countriesComboBox.addItem(country);
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        countriesComboBox = new JComboBox();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(countriesComboBox, gbc);
        answerTextField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(answerTextField, gbc);
        currentScoreLabel = new JLabel();
        currentScoreLabel.setHorizontalAlignment(0);
        currentScoreLabel.setHorizontalTextPosition(0);
        currentScoreLabel.setText("Current Score:  0");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.NORTH;
        mainPanel.add(currentScoreLabel, gbc);
        highScoreLabel = new JLabel();
        highScoreLabel.setHorizontalAlignment(0);
        highScoreLabel.setHorizontalTextPosition(0);
        highScoreLabel.setText("High Score:  0");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        gbc.weighty = 0.8;
        gbc.anchor = GridBagConstraints.NORTH;
        mainPanel.add(highScoreLabel, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
